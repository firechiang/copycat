apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.android.compileSdkVersion
    buildToolsVersion rootProject.android.buildToolsVersion

    defaultConfig {
        applicationId "com.firechiang.android.copycat_helloword"
        minSdkVersion rootProject.android.minSdkVersion
        targetSdkVersion rootProject.android.targetSdkVersion
        versionCode rootProject.android.versionCode
        versionName rootProject.android.versionName

        testInstrumentationRunner rootProject.android.androidJUnitRunner
    }

    buildTypes {
        release {
            minifyEnabled false
            // 打包混淆配置所在文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    /**
     * 指定资源文件目录
     * 注意：如果是自定义布局文件夹，一定要在该文件夹下再建一个layout文件夹，然后把布局文件放到layout文件夹里面，否则布局文件无法加载
     * 注意：如果是自定义Menu(菜单)文件夹，一定要在该文件夹下再建一个menu文件夹，然后把Menu（菜单）文件放到menu文件夹里面，否则Menu（菜单）文件无法加载
     */
    sourceSets {
        main {
            res.srcDirs = ['src/main/res','src/main/res/layout/ui','src/main/res/layout/layout0','src/main/res/layout/ui_example','src/main/res/layout/data_storage']
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation rootProject.dependenciesLib.appcompat
    implementation rootProject.dependenciesLib.constraintlayout
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.1'
    testImplementation rootProject.dependenciesLib.junit
    androidTestImplementation rootProject.dependenciesLib.androidTestJunit
    androidTestImplementation rootProject.dependenciesLib.androidTestEspressoCore
}
